import streamlit as st

from rqle_ai_langchain_util.utils.file_util import read_image

COMPANY_LOGO_PATH = 'img/rqle_ai_logo.jpg'
COMPANY_NAME = 'RQle.AI'


def set_page_sidebar(application_description: str):
    """
    Set up the sidebar of the application
    :param application_description: the description of the application
    :return: a sidebar to be integrated in a streamlit app
    """
    st.sidebar.markdown(body=f"""<img src="data:image/jpeg;base64,{read_image(COMPANY_LOGO_PATH)}" 
                                      alt="{COMPANY_LOGO_PATH}" width="100" height="100"/>""",
                        unsafe_allow_html=True)
    st.sidebar.header(body='About')
    st.sidebar.markdown(body=f"{application_description}")

    st.sidebar.header(body=COMPANY_NAME)
    st.sidebar.markdown(body=f"""
     **{COMPANY_NAME}** believes in the transformative potential of Generative AI. More specifically, it focuses on 
     showcasing real-world applications of how Generative AI can empower individuals and organizations worldwide in 
     addressing their customers' "*job to be done*" problems and create value for them.
    """)

    st.sidebar.header(body='Resources')
    st.sidebar.markdown(body="""
    - [GitHub Repository](https://github.com/RQledotai/rqle-ai-langchain-util)
    - [LinkedIn Profile](https://www.linkedin.com/company/102641077)
    - **Author**: [Quentin Reul](mailto:)
    """)

    st.sidebar.header(body='Disclaimer')
    st.sidebar.markdown(body="""
    This application was partially generated by a large language model (Generative AI). While the AI assisted in the 
    generation of ideas and content, the final solution and its implementation remain the responsibility of the human user. 
    It is important to critically evaluate and revise the AI-generated content to ensure its accuracy, appropriateness, 
    and ethical implications.
    """)

    return st.sidebar


def set_page_header(application_name: str, application_logo_path: str) -> str:
    """
    Set up the header of the application
    :param application_name: the name of the application
    :param application_logo_path: the path to the logo of the application
    :return: Markdown string for the header of the application-
    """
    return f"""
     <h1 align="center">
        <img src="data:image/jpeg;base64,{read_image(application_logo_path)}" alt="{application_logo_path}" 
             width="100" height="100"/> - 
        {application_name}&copy;
     </h1>
     <hr/>
    """


def set_page_footer(years: str = '2024') -> str:
    """
    Set up the footer of the application
    :param years: the years of the copyright
    :return: Markdown string for the footer of the application
    """
    return f"""
     <hr/>
     <h5 align="center">
        {years} - All rights reserved.
        <img src="data:image/jpeg;base64,{read_image(COMPANY_LOGO_PATH)}" alt="{COMPANY_LOGO_PATH}" 
             width="50" height="50"/>
     </h5>
    """